{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api/v1',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // Token expired or invalid\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  register: userData => api.post('/auth/register', userData),\n  login: credentials => api.post('/auth/login', credentials),\n  getProfile: () => api.get('/auth/profile'),\n  updateProfile: userData => api.put('/auth/profile', userData)\n};\n\n// Users API (Admin only)\nexport const usersAPI = {\n  getAllUsers: () => api.get('/users'),\n  getUserById: id => api.get(`/users/${id}`),\n  updateUser: (id, userData) => api.put(`/users/${id}`, userData),\n  deleteUser: id => api.delete(`/users/${id}`)\n};\n\n// Tasks API\nexport const tasksAPI = {\n  getAllTasks: () => api.get('/tasks'),\n  getTaskById: id => api.get(`/tasks/${id}`),\n  createTask: taskData => api.post('/tasks', taskData),\n  updateTask: (id, taskData) => api.put(`/tasks/${id}`, taskData),\n  deleteTask: id => api.delete(`/tasks/${id}`)\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","status","removeItem","window","location","href","authAPI","register","userData","post","login","credentials","getProfile","get","updateProfile","put","usersAPI","getAllUsers","getUserById","id","updateUser","deleteUser","delete","tasksAPI","getAllTasks","getTaskById","createTask","taskData","updateTask","deleteTask"],"sources":["C:/Users/gudep/Desktop/primetrade/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api/v1',\r\n  timeout: 10000,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor to handle errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    if (error.response?.status === 401) {\r\n      // Token expired or invalid\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Auth API\r\nexport const authAPI = {\r\n  register: (userData) => api.post('/auth/register', userData),\r\n  login: (credentials) => api.post('/auth/login', credentials),\r\n  getProfile: () => api.get('/auth/profile'),\r\n  updateProfile: (userData) => api.put('/auth/profile', userData),\r\n};\r\n\r\n// Users API (Admin only)\r\nexport const usersAPI = {\r\n  getAllUsers: () => api.get('/users'),\r\n  getUserById: (id) => api.get(`/users/${id}`),\r\n  updateUser: (id, userData) => api.put(`/users/${id}`, userData),\r\n  deleteUser: (id) => api.delete(`/users/${id}`),\r\n};\r\n\r\n// Tasks API\r\nexport const tasksAPI = {\r\n  getAllTasks: () => api.get('/tasks'),\r\n  getTaskById: (id) => api.get(`/tasks/${id}`),\r\n  createTask: (taskData) => api.post('/tasks', taskData),\r\n  updateTask: (id, taskData) => api.put(`/tasks/${id}`, taskData),\r\n  deleteTask: (id) => api.delete(`/tasks/${id}`),\r\n};\r\n\r\nexport default api;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}