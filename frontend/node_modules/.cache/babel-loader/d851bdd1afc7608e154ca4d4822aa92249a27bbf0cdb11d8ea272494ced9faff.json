{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { authAPI } from '../services/api';\nimport { getToken, getUser, setToken, setUser, removeToken, removeUser } from '../utils/auth';\nexport const useAuth = () => {\n  _s();\n  const [user, setUserState] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const token = getToken();\n    const userData = getUser();\n    if (token && userData) {\n      setUserState(userData);\n      setIsAuthenticated(true);\n    }\n    setLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authAPI.login(credentials);\n      const {\n        user: userData,\n        token\n      } = response.data.data;\n      setToken(token);\n      setUser(userData);\n      setUserState(userData);\n      setIsAuthenticated(true);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed'\n      };\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authAPI.register(userData);\n      const {\n        user: newUser,\n        token\n      } = response.data.data;\n      setToken(token);\n      setUser(newUser);\n      setUserState(newUser);\n      setIsAuthenticated(true);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      return {\n        success: false,\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed'\n      };\n    }\n  };\n  const logout = () => {\n    removeToken();\n    removeUser();\n    setUserState(null);\n    setIsAuthenticated(false);\n    window.location.href = '/login';\n  };\n  const updateProfile = async userData => {\n    try {\n      const response = await authAPI.updateProfile(userData);\n      const updatedUser = response.data.data.user;\n      setUser(updatedUser);\n      setUserState(updatedUser);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      return {\n        success: false,\n        error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed'\n      };\n    }\n  };\n  const isAdmin = () => {\n    return user && user.role === 'admin';\n  };\n  return {\n    user,\n    loading,\n    isAuthenticated,\n    login,\n    register,\n    logout,\n    updateProfile,\n    isAdmin\n  };\n};\n_s(useAuth, \"R3yHEK1bEEeoQJ5SA9aTWoP7cE4=\");","map":{"version":3,"names":["useState","useEffect","authAPI","getToken","getUser","setToken","setUser","removeToken","removeUser","useAuth","_s","user","setUserState","loading","setLoading","isAuthenticated","setIsAuthenticated","token","userData","login","credentials","response","data","success","error","_error$response","_error$response$data","message","register","newUser","_error$response2","_error$response2$data","logout","window","location","href","updateProfile","updatedUser","_error$response3","_error$response3$data","isAdmin","role"],"sources":["C:/Users/gudep/Desktop/primetrade/frontend/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { authAPI } from '../services/api';\r\nimport { getToken, getUser, setToken, setUser, removeToken, removeUser } from '../utils/auth';\r\n\r\nexport const useAuth = () => {\r\n  const [user, setUserState] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const token = getToken();\r\n    const userData = getUser();\r\n    \r\n    if (token && userData) {\r\n      setUserState(userData);\r\n      setIsAuthenticated(true);\r\n    }\r\n    \r\n    setLoading(false);\r\n  }, []);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await authAPI.login(credentials);\r\n      const { user: userData, token } = response.data.data;\r\n      \r\n      setToken(token);\r\n      setUser(userData);\r\n      setUserState(userData);\r\n      setIsAuthenticated(true);\r\n      \r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Login failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await authAPI.register(userData);\r\n      const { user: newUser, token } = response.data.data;\r\n      \r\n      setToken(token);\r\n      setUser(newUser);\r\n      setUserState(newUser);\r\n      setIsAuthenticated(true);\r\n      \r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Registration failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    removeToken();\r\n    removeUser();\r\n    setUserState(null);\r\n    setIsAuthenticated(false);\r\n    window.location.href = '/login';\r\n  };\r\n\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      const response = await authAPI.updateProfile(userData);\r\n      const updatedUser = response.data.data.user;\r\n      \r\n      setUser(updatedUser);\r\n      setUserState(updatedUser);\r\n      \r\n      return { success: true, data: response.data };\r\n    } catch (error) {\r\n      return {\r\n        success: false,\r\n        error: error.response?.data?.message || 'Profile update failed'\r\n      };\r\n    }\r\n  };\r\n\r\n  const isAdmin = () => {\r\n    return user && user.role === 'admin';\r\n  };\r\n\r\n  return {\r\n    user,\r\n    loading,\r\n    isAuthenticated,\r\n    login,\r\n    register,\r\n    logout,\r\n    updateProfile,\r\n    isAdmin\r\n  };\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}